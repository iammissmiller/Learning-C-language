# Keywords in C

  Keywords are predefined or reserved words that have special meanings to the compiler. These 
  are part of the syntax and cannot be used as identifiers in the program.


# auto

*auto is the default storage class variable that is declared inside a function or a block
*By default, auto variables have garbage values assigned to them.
*Automatic variables are also called local variables as they are local to a function. 

# Syntax = auto int num;

# Example 

// C program to demonstrate 
// auto keyword
#include <stdio.h>

int printvalue()
{
  auto int a = 10;
  printf("%d", a);
}

// Driver code
int main() 
{
  printvalue();
  return 0;
}


# break and continue

* The break statement is used to terminate the innermost loop.
* It generally terminates a loop or a switch statement.
* The continue statement skips to the next iteration of the loop.

# Example

// C program to show use 
// of break and continue
#include <stdio.h>

// Driver code (???????)
int main()
{
  for (int i = 1; i <= 10; i++) 
  {
    if (i == 2) 
    {
      continue;
    }
    if (i == 6) 
    {
      break;
    }
    printf("%d ", i);
  }
  return 0;
}


# switch, case, and default

* The switch statement in C is used as an alternate to the if-else ladder statement.
* For a single variable i.e, switch variable it allows us to execute multiple operations 
  for different possible values of a single variable. 

# Syntax

switch(Expression)
{
    case '1': // operation 1
            break;
    case:'2': // operation 2
            break;
    default: // default statement to be executed 
}


# Example

// C program to demonstrate 
// switch case statement
#include <stdio.h>

// Driver code
int main() {
  int i = 4;
  switch (i) {
    case 1: 
      printf("Case 1\n");break;
    case 2:
      printf("Case 2\n");break;
    case 3:
      printf("Case 3\n");break;
    case 4:
      printf("Case 4\n");break;
    default:
      printf("Default\n");break;
  }
}

 





























































































