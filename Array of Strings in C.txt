Array of Strings in C

In C programming String is a 1-D array of characters and is defined as an array of characters. But an array of strings in C is a two-dimensional array of character types. Each String is terminated with a null character (\0). It is an application of a 2d array.

Syntax:

char variable_name[r][m] = {list of string};
Here,

var_name is the name of the variable in C.
r is the maximum number of string values that can be stored in a string array.
m is the maximum number of character values that can be stored in each string array.


#include <stdio.h>

int main()

{

char arr[10][10] = {"GEEKS" , "FOR" , "GEEKS"};

printf("string array elements are :\n ");

for (int i = 0; i < 3 ; i++)
{
printf("%s\n", arr[i]);
}

return 0;

}





# Memory representation of 
  array of strings

We have 3 rows and 10 columns specified in our Array of String but because of prespecifying, the size of the array of strings the space consumption is high. So, to avoid high space consumption in our program we can use an Array of Pointers in C.


Invalid Operations in Arrays of Strings 
We can’t directly change or assign the values to an array of strings in C.

Example:

char arr[3][10] = {"Geek", "Geeks", "Geekfor"};
arr[0] = "GFG";  // This will give an Error that says assignment to expression with an array type.
To change values we can use strcpy() function in C

strcpy(arr[0],"GFG"); // This will copy the value to the arr[0].














