# Revision 

* It was mainly developed as a system programming language to write the UNIX operating system.

* The main features of the C language include:

      #General Purpose and Portable
      #Low-level Memory Access
      #Fast Speed
      #Clean Syntax

* These features make the C language suitable for system programming like an operating system 
  or compiler development.

* Why Should We Learn C? 
  # Many later languages have borrowed syntax/features directly or indirectly from the C 
    language. Like syntax of Java, PHP, JavaScript, and many other languages are mainly based 
    on the C language.
  # C++ is nearly a superset of C language (Only a few programs may compile in C, but not in C++).
  # If a person learns C programming first, it will help him to learn any modern programming 
    language as well. As learning C help to understand a lot of the underlying architecture of 
    the operating system. Like pointers, working with memory locations, etc.

* Difference Between C and C++
  # C++ supports OOPs paradigm while C only have procedural concept of programming.
  # C++ have exception handling capablities. In C, we have to resolve manually.
  # There are no references in C.


# Header Files Inclusion – Line 1 [#include <stdio.h>]

  The first and foremost component is the inclusion of the Header files in a C program. 
  A header file is a file with extension .h which contains C function declarations and macro 
  definitions to be shared between several source files. All lines that start with # are 
  processed by a preprocessor which is a program invoked by the compiler. In the above example, 
  the preprocessor copies the preprocessed code of stdio.h to our file. The .h files are called 
  header files in C.

# Main Method Declaration – Line 2 [int main()]

  The next part of a C program is to declare the main() function. It is the entry point of a 
  C program and the execution typically begins with the first line of the main(). The empty 
  brackets indicate that the main doesn’t take any parameter (See this for more details). The 
  int that was written before the main indicates the return type of main(). The value returned 
  by the main indicates the status of program termination. See this post for more details on the
  return type.

# Body of Main Method – Line 3 to Line 6 [enclosed in {}]

  The body of a function in the C program refers to statements that are a part of that function.
  It can be anything like manipulations, searching, sorting, printing, etc. A pair of curly 
  brackets define the body of a function. All functions must start and end with curly brackets.

# Statement – Line 4 [printf(“Hello World”);]

  Statements are the instructions given to the compiler. In C, a statement is always terminated 
  by a semicolon (;). In this particular case, we use printf() function to instruct the compiler 
  to display “Hello World” text on the screen.

# Return Statement – Line 5 [return 0;]

  The last part of any C function is the return statement. The return statement refers to the 
  return values from a function. This return statement and return value depend upon the return 
  type of the function. The return statement in our program returns the value from main(). The 
  returned value may be used by an operating system to know the termination status of your 
  program. The value 0 typically means successful termination. 

# Types of comments in C

   
  *Single-line comment
  *Multi-line comment

# Tokens in C

    Keywords
    Identifiers
    Constants
    Strings
    Special Symbols
    Operators
















