C – if Statement

The if in C is the most simple decision-making statement. It consists of the test condition and if block or body. If the given condition is true only then the if block will be executed.


What is if in C?

The if in C is a decision-making statement that is used to execute a block of code based on the value of the given expression. It is one of the core concepts of C programming and is used to include conditional code in our program.



Syntax of if Statement in C

if(condition) 
{
    // if body
    // Statements to execute if condition is true
}


How to use if statement in C?


The following examples demonstrate how to use the if statement in C:


// C Program to demonstrate the syntax of if statement
#include <stdio.h>

int main()
{

	int gfg = 9;
	// if statement with true condition
	if (gfg < 10) {
		printf("%d is less than 10", gfg);
	}

	// if statement with false condition
	if (gfg > 20) {
		printf("%d is greater than 20", gfg);
	}

	return 0;
}





How if in C works?

The working of the if statement in C is as follows:

STEP 1: When the program control comes to the if statement, the test expression is evaluated.

STEP 2A: If the condition is true, the statements inside the if block are executed.

STEP 2B: If the expression is false, the statements inside the if body are not executed.

STEP 3: Program control moves out of the if block and the code after the if block is executed.


Example 1: C Program to check whether the number is even or odd.


// C Program to check if the number is even or odd
#include <stdio.h>

int main()
{
	int n = 4956;

	// condition to check for even number
	if (n % 2 == 0) {
		printf("%d is Even", n);
		
	}

	// condition to check for odd number
	else {
		printf("%d is Odd", n);
		
	}
	return 0;
}



Example 2: C Program to check whether a number is prime or not.


// C program to check whether a number is prime or not
#include <math.h>

int main()
{
	int n = 19;
	int flag = 0;

	for (int i = 2; i * i <= n; i++) {

		// If n is divisible by any number between
		// 2 and n/2, it is not prime
		if (n % i == 0) {
			flag = 1;
			break;
		}
	}

	printf("%d is ", n);
	if (flag == 1) {
		// it is only printed if the number is not prime
		printf("not ");
	}
	printf("a prime number.\n");

	return 0;
}





# Advantages of if Statement

Following are the main advantages of the if statement in C:

It is the simplest decision-making statement.

It is easy to use and understand.

It can evaluate expressions of all types such as int, char, bool, etc.





# Disadvantages of if Statement

The main limitations of if block is listed below:

It contains only a single block. In case when there are multiply related if blocks, all the blocks will be tested even when the matching if block is found at the start

When there are a large number of expressions, the code of the if block gets complex and unreadable.

It is slower for a large number of conditions.



# Conclusion

The if statement is the simplest decision-making statement due to which it is easy to use and understand. But being simple, it also has many limitations. We can use if-else, if-else-if ladder, or switch statements to overcome these limitations. Still, the if statement is widely used in C programming to add some conditional code to the program.




























































