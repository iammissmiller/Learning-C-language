Pass by value 

* This method uses in mode semantics

* Changes made to formal parameters do not get transmitted back to caller

* Any modifications to the formal parameter variable inside the function or method affect only the seperate storage
location and will not be reflected in the actual parameter in the calling environment . This method is called call by value.


Example   #include <stdio.h>
void func(int a , int b )
{
    
    a += b;
    printf("in func , a = %d , b = %d \n" , a , b);
    
}

int main(void)
{
    
    int x = 5 , y = 7;
    func(x,y);
    printf("In main , x = %d y = %d\n" , x , y);
    return 0;
    
}



# shortcomings of pass by value 

* inefficiency in storage allocation 

* for objects and arrays , the copy semantics are costly













